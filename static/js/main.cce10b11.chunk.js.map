{"version":3,"sources":["components/Cockpit/Cockpit.module.css","components/Assembly/Assembly.module.css","components/Assembly/LightOnOff/LightOnOff.module.css","components/Cockpit/HowToPlay.module.css","components/YouWin/YouWin.module.css","components/Cockpit/Cockpit.js","components/Assembly/LightOnOff/LightOnOff.js","components/Assembly/Assembly.js","components/Cockpit/HowToPlay.js","components/YouWin/YouWin.js","containers/App.js","reportWebVitals.js","index.js"],"names":["module","exports","cockpit","props","className","styles","playRules","playRulesBtn","onClick","howToPlay","title","titleBtn","restart","restartBtn","lightOnOff","style","light","isLight","push","true","false","click","join","assembly","squareLen","three","four","five","id","lightsArr","map","LightOnOff","event","clicked","coordinates","container","rulesDiv","close","youWin","youwin","closed","App","deleteLeft","changeLightsArr","row","col","deleteRight","deleteUp","deleteDown","lightHandler","state","lights","criticalLength","squareLength","el","doesLight","index","findIndex","setState","checkForWin","newLightsArr","i","j","Math","random","prevState","haveWon","forEach","isHowToPlay","closeWinDialog","letMeWin","winArr","Cockpit","this","appTitle","Assembly","HowToPlay","YouWin","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cce10b11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cockpit\":\"Cockpit_cockpit__1IYA1\",\"playRulesBtn\":\"Cockpit_playRulesBtn__2Bnpd\",\"titleBtn\":\"Cockpit_titleBtn__234H2\",\"restartBtn\":\"Cockpit_restartBtn__2MQ1x\",\"title\":\"Cockpit_title__nCoNY\",\"playRules\":\"Cockpit_playRules__2AQEu\",\"restart\":\"Cockpit_restart__4y5H9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"assembly\":\"Assembly_assembly__2odpD\",\"three\":\"Assembly_three__32pUa\",\"four\":\"Assembly_four__GzBc3\",\"five\":\"Assembly_five__3-UOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"LightOnOff_light__TdKwV\",\"true\":\"LightOnOff_true__2nwDx\",\"false\":\"LightOnOff_false__Tta9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HowToPlay_container__3etU9\",\"rulesDiv\":\"HowToPlay_rulesDiv__PSseV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"youwin\":\"YouWin_youwin__1JqS8\"};","import React from 'react';\nimport styles from './Cockpit.module.css';\n\nconst cockpit = (props) => {\n    return <div className={styles.cockpit}>\n                <div className={styles.playRules}>\n                    <button className={styles.playRulesBtn} onClick={props.howToPlay}>How to play ?</button> \n                </div>\n                <div className={styles.title}>\n                    <p className={styles.titleBtn}>{props.title}</p>\n                </div>\n                <div className={styles.restart}>\n                    <button className={styles.restartBtn} onClick={props.restart}>Restart</button>\n                </div>\n           </div>\n}\n\nexport default cockpit;\n","import React from 'react';\nimport styles from './LightOnOff.module.css';\n\nconst lightOnOff = (props) => {\n    const style = [styles.light];\n    \n    if(!props.isLight) {\n        style.push(styles.false);\n    } else {\n        style.push(styles.true);\n    }\n    \n    return (<div onClick={props.click} className={style.join(' ')}>\n                \n           </div>\n           );\n}\n\nexport default lightOnOff;","import React from 'react';\nimport styles from './Assembly.module.css';\nimport LightOnOff from './LightOnOff/LightOnOff';\n\nconst assembly = (props) => {\n\n    const style = [styles.assembly];\n    \n    if(props.squareLen === 3) {\n        style.push(styles.three);\n    } else if(props.squareLen === 4) {\n            style.push(styles.four);\n    } else if(props.squareLen === 5) {\n        style.push(styles.five);\n    }\n    \n    return <div className={style.join(' ')} id=\"four\">\n                {   props.lightsArr.map((light) => <LightOnOff isLight={light.isLight} \n                                                               click={(event) => props.clicked(event, light.id, light.coordinates)}/>) }\n           </div>\n}\n\nexport default assembly;\n","import React from 'react';\nimport styles from './HowToPlay.module.css';\n\nconst howToPlay = (props) => {\n    return (<div className={styles.container}>\n                <div className={styles.rulesDiv}>\n                    <ul><h2>How To Play?</h2>\n                        <li>Some of the lights are off while some are on.</li>\n                        <li>When a light is pressed or clicked, it changes its parity. \n                            This also changes the parity of all the lights which share a \n                            boundary with the pressed light.\n                        </li>\n                        <li>Turn off all the lights to win.</li>\n                    </ul>\n                    <div>\n                        <button onClick={props.close}>Close</button>\n                    </div>\n                </div>\n            </div>);\n}\n\nexport default howToPlay;","import React from 'react';\nimport styles from './YouWin.module.css';\n\nconst youWin = (props) => {\n\n    return <div className={styles.youwin}>\n                <div>\n                    <h1>You Win</h1>\n                    <button onClick={props.closed}>Play again</button>        \n                </div>\n                        \n           </div>\n}\n\nexport default youWin;","import './App.css';\nimport React, { Component } from 'react';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport Assembly from '../components/Assembly/Assembly';\nimport HowToPlay from '../components/Cockpit/HowToPlay';\nimport YouWin from '../components/YouWin/YouWin';\n\nclass App extends Component {\n\n        constructor(props) {\n                super(props);\n\n                const lightsArr = [];\n                \n                for(let i = 0; i < 3; i++) {\n                        for(let j = 0; j < 3; j++) {\n                                lightsArr.push({ \n                                                isLight: (Math.random() > 0.5 ? true : false ), \n                                                id: `${i}${j}`, \n                                                coordinates: [i, j]\n                                               });\n                                }\n                        }\n                        this.state = {\n                                lights: [...lightsArr],\n                                squareLength: 3,\n                                isHowToPlay: false,\n                                haveWon: false,\n                          };\n                           \n                                                \n        }\n\n  deleteLeft = (changeLightsArr, row, col) => {\n        changeLightsArr.push([row, col - 1].join(''));\n  }\n  \n  deleteRight = (changeLightsArr, row, col) => {\n        changeLightsArr.push([row, col + 1].join(''));\n  }\n  \n  deleteUp = (changeLightsArr, row, col) => {\n        changeLightsArr.push([row - 1, col].join(''));\n  }\n  \n  deleteDown = (changeLightsArr, row, col) => {\n        changeLightsArr.push([row + 1, col].join(''));\n  }\n \n  lightHandler = (event, id, coordinates) => {\n  \n    const lightsArr = [...this.state.lights];\n    const criticalLength = this.state.squareLength - 1;\n    const changeLightsArr = [];\n    const row = coordinates[0];\n    const col = coordinates[1];\n    \n    // Logic for determing which lights to turn on or off.\n    changeLightsArr.push([row, col].join(''));\n    switch(row) {\n\n      case 0:   this.deleteDown(changeLightsArr, row, col);\n                        \n                switch(col) {\n                \n                        case 0: this.deleteRight(changeLightsArr, row, col);\n                                break;\n\n                        case criticalLength: this.deleteLeft(changeLightsArr, row, col);\n                                        break;\n\n                        default: this.deleteRight(changeLightsArr, row, col);\n                                 this.deleteLeft(changeLightsArr, row, col);\n                                 break;\n                };\n                break;\n\n      case criticalLength: this.deleteUp(changeLightsArr, row, col); \n                switch(col) {\n                        case 0: this.deleteRight(changeLightsArr, row, col);\n                                break;\n\n                        case criticalLength: this.deleteLeft(changeLightsArr, row, col);\n                                        break;\n                \n                        default: this.deleteLeft(changeLightsArr, row, col);\n                                 this.deleteRight(changeLightsArr, row, col);\n                                 break;                        \n                        \n                };\n                break;\n\n      default:  this.deleteDown(changeLightsArr, row, col);\n                this.deleteUp(changeLightsArr, row, col);\n                switch(col) {\n\n                case 0: this.deleteRight(changeLightsArr, row, col);\n                        break;\n\n                case criticalLength: this.deleteLeft(changeLightsArr, row, col); \n                               break;\n\n                default: this.deleteLeft(changeLightsArr, row, col);\n                         this.deleteRight(changeLightsArr, row, col);\n                         break;                        \n                \n                };\n                break;\n    }\n    \n    // Turn the selected lights off.\n    changeLightsArr.map(el => {\n      let doesLight;\n      const index = lightsArr.findIndex(light => el === light.id);\n      doesLight = this.state.lights[index].isLight;\n      lightsArr[index].isLight = !doesLight;\n      return 0;\n    });\n\n    this.setState({ lights: lightsArr });\n    this.checkForWin()\n\n  }\n\n  checkForWin = () => {\n          const lightsArr = [...this.state.lights];\n          const checkIndex = lightsArr.findIndex(light => light.isLight === true);\n          if(checkIndex === -1) {\n                const newLightsArr = [];\n                for(let i = 0; i < this.state.squareLength + 1; i++) {\n                      for(let j = 0; j < this.state.squareLength + 1; j++) {\n                              newLightsArr.push({ \n                                              isLight: (Math.random() > 0.5 ? true : false ), \n                                              id: `${i}${j}`, \n                                              coordinates: [i, j]\n                                             });\n                              }\n                      }  \n                this.setState((prevState, props) => {\n                          return {  lights: [...newLightsArr], haveWon: true, squareLength: (prevState.squareLength + 1) }\n                  })\n\n          }\n  }\n\n  restart = () => {\n          const lightsArr = [...this.state.lights];\n          lightsArr.forEach(light => Math.random() > 0.5 ? light.isLight = true : light.isLight = false);\n          this.setState({ lights: lightsArr });\n  }\n\n  howToPlay = () => {\n        this.setState((prevState, props) => { return { isHowToPlay: !prevState.isHowToPlay }});\n        \n  }\n\n  closeWinDialog = () => {\n        this.setState({ haveWon: false });\n        this.restart();\n  }\n\n  letMeWin = () => {\n          const winArr = [...this.state.lights];\n          winArr.forEach(light => {\n                  if(light.id === \"00\" || light.id === \"01\" || light.id === \"10\") {\n                          light.isLight = true;\n                  } else {\n                          light.isLight = false;\n                  }\n          });\n          this.setState({ lights: winArr});\n\n  }\n\n  render() {\n    return (\n       <div className=\"App\">\n          <Cockpit title={this.props.appTitle}\n                   restart={this.restart}\n                   howToPlay={this.howToPlay}/>\n          <Assembly squareLen={this.state.squareLength} \n                    lightsArr={this.state.lights} \n                    clicked={this.lightHandler}/>\n           { this.state.isHowToPlay ? <HowToPlay close={this.howToPlay}/> : null }\n           { this.state.haveWon ? <YouWin closed={this.closeWinDialog}/> : null} \n           <button onClick={this.letMeWin}>Let me Win</button>\n       </div>\n       );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App appTitle=\"Lights Out\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}